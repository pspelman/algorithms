// this function requires ONE date and an optional second date
// if no second date is passed, it will default to finding the time elapsed between NOW and the start date
// (originally used to find time elapsed since creation of a mongodb entry using the the createdAt field generated by the timestamps option


function getSecondsBetweenDates(starting_timestamp, ending_timestamp = new Date()) {
    //make sure these are able to be understood as date objects
    //format is YYYY-MM-DDTHH:MM:SS.sssZ
    // example: 2018-04-26T00:52:26.299Z

    let start_time_ISO = new Date(starting_timestamp).toISOString();
    let end_time_ISO = new Date(ending_timestamp).toISOString();

    let start_time_parsed = Date.parse(start_time_ISO);
    let end_time_parsed = Date.parse(end_time_ISO);

    let difference_in_ms = end_time_parsed - start_time_parsed;

    let difference_in_seconds = difference_in_ms / 1000;

//optional logging to console
    console.log(`ORIGINAL INPUTS:\nT1: ${starting_timestamp}\nT2: ${ending_timestamp}\n`,);
    console.log(`ISO(s): \nT1: ${start_time_ISO}\nT2: ${end_time_ISO}\n`,);
    console.log(`parsed ISO(s): \nT1: ${start_time_parsed}\nT2: ${end_time_parsed}\n`,);
    console.log(`Difference in ms: `, difference_in_ms);
    console.log(`Difference in seconds: ${difference_in_seconds}\n`,);

// TODO: include conversion to other units of time
    let difference_in_minutes;
    let difference_in_hours;
    let difference_in_days;
    let difference_in_weeks;
    let difference_in_months;

    return difference_in_seconds;
}


let start_time = "2018-04-26T01:32:00.826Z";
// let end_time = new Date();
let end_time = "Wed Apr 25 2018 18:42:05 GMT-0700 (Pacific Daylight Time)";

// getSecondsBetweenDates(start_time);
getSecondsBetweenDates(start_time, end_time);
